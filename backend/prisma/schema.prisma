// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model user {
    id              Int               @id @default(autoincrement())
    name            String
    email           String            @unique
    password        String
    isAdmin         Boolean           @default(false)
    createdAt       DateTime          @default(now())
    updatedAt       DateTime          @updatedAt
    orderItem       orderItem[]
    shippingAddress shippingAddress[]
}

model category {
    id        Int       @id @default(autoincrement())
    name      String
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    product   product[]
}

model product {
    id           Int         @id @default(autoincrement())
    name         String
    slug         String      @unique
    image        String
    price        Decimal     @default(0)
    brand        String
    rating       Float       @default(0)
    numReviews   Int         @default(0)
    countInStock Int         @default(0)
    description  String
    isPublished  Boolean     @default(false)
    category     category    @relation(fields: [categoryId], references: [id])
    categoryId   Int
    createdAt    DateTime    @default(now())
    updatedAt    DateTime    @updatedAt
    orderItem    orderItem[]
}

model orderItem {
    id                Int             @id @default(autoincrement())
    user              user            @relation(fields: [userId], references: [id])
    userId            Int
    product           product         @relation(fields: [productId], references: [id])
    productId         Int
    quantity          Int             @default(0)
    paymentMethod     String
    paymentResult     String
    itemsPrice        Decimal         @default(0)
    taxPrice          Decimal         @default(0)
    totalPrice        Decimal         @default(0)
    isPaid            Boolean         @default(false)
    isDelivered       Boolean         @default(false)
    paidAt            DateTime
    deliverAt         DateTime
    shippingAddress   shippingAddress @relation(fields: [shippingAddressId], references: [id])
    shippingAddressId Int
    createdAt         DateTime        @default(now())
    updatedAt         DateTime        @updatedAt
}

model shippingAddress {
    id         Int         @id @default(autoincrement())
    user       user        @relation(fields: [userId], references: [id])
    userId     Int
    fullname   String
    address    String
    city       String
    state      String
    postalCode String
    country    String
    lat        String?
    lon        String?
    createdAt  DateTime    @default(now())
    updatedAt  DateTime    @updatedAt
    orderItem  orderItem[]
}
